import java.io.BufferedReader
import java.io.InputStreamReader
import java.util.*

fun main() {
    val br = BufferedReader(InputStreamReader(System.`in`))
    val (N, M) = br.readLine().split(" ").map { it.toInt() }

    val adj = Array(N + 1) { mutableListOf<Int>() }
    val inDegree = IntArray(N + 1) { 0 }

    repeat(M) {
        val (u, v) = br.readLine().split(" ").map { it.toInt() }
        adj[u].add(v)
        inDegree[v]++
    }

    val queue: Queue<Int> = LinkedList()
    for (i in 1..N) {
        if (inDegree[i] == 0) {
            queue.offer(i)
        }
    }

    val result = mutableListOf<Int>()

    while (queue.isNotEmpty()) {
        val u = queue.poll()
        result.add(u)
        for (v in adj[u]) {
            inDegree[v]--
            if (inDegree[v] == 0) {
                queue.offer(v)
            }
        }
    }

    if (result.size != N) {
        println("-1")
    } else {
        println(result.joinToString(" "))
    }
}
